Download the Git https://git-scm.com/downloads 

This is version control systsem

To check on the version: git --version
To unistall : ./uninstall.sh
Use of Git Commands
2 ways to get git into it ... git clone / git init 

git status
git add . // to add all files to staging 
git log -p ( all the transcations) 
git log --author/--grep "text to be checked for"

to create a new repository via command line :
echo "# RepoName" >> README.md
git init .
git add README.md
git commit -m "first commit" // to analog with the printing , to be locked as the record
git remote add origin https://github.com/sangeetha-r077/RepoName.git
git push -u origin master

push an existing repository via command line : git remote add origin https://github.com/sangeetha-r077/RepoName.git --> git push -u origin master

git pull <get all the changes>

git status <to check the status from any time in git>

For the first time configuration

git config --global user.name "Provide Username" // to get acknowledge and store the username
git config --global user.email "Provide Email" // for entering the Email

To begin with Git Project :

git init <ProjectName>
cd <ProjectName>

to add any file :
git add <fileName>
git commit -m "Write the Msg here" // -m to help us to write msg

to remove the changes : git checkout -- <filename>

To check the history use : git.log

To push our local repo to the GitHub server we'll need to add a remote repository:
git remote add origin <repository URL>

To Push Remotely : git push -u origin <BranchName>

To Pull Remotely : git pull origin <BranchName>

To get the Diff : git diff HEAD

To get the Staged Difference : git diff --staged

For the Branching Out : git branch <BranchName> / create it  git checkout -b <filename>

For the switching of the BRANCH : git checkout -b <BranchName>

To Remove/delete the Files : git rm 'FileName'

To Merge the Code : git merge <BranchName>

To Delete a Branch : git branch -d <branch name>

To stage : git reset HEAD <filename> // mutiple undo

git add -all : super push for all add and delete

git checkout <hash#> for the detached head to create any new branch from there!

to get info on current and all branches : git branch
* (HEAD detached at bbd70e1)
  master
 * indicated the current branch
  
If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:
git switch -c <new-branch-name> or git branch <new name> <hash#>

To rename the branch : git branch -m <old> <new name>
to remove a branch: git branch -d <filename>

md: is it markdown language

.gitignore file will not track the files 

package.json : for the dependecies download

git branch -a : to see all teh branches

to get the previous template repo : git clone -b <branch_name> <clone_url>

to get ride of everything in git logs / git folder: rm -dfr .git



