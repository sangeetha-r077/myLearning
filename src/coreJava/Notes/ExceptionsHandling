The exception handling in java is one of the powerful mechanism to handle
the runtime errors so that normal flow of the application can be maintained.

throwable is the super class.

There are mainly two types of exceptions: checked and unchecked where error is considered as unchecked exception. The sun microsystem says there are three types of exceptions:

Checked Exception
Unchecked Exception
Error.

a. Checked exceptions
Checked exceptions are exceptional conditions that a well-written application should anticipate and recover from. These are subject to the Catch or Specify Requirement, meaning that code that might throw a checked exception must be enclosed by either of the following:
- A try block that catches the exception, followed by a catch or a finally block or both that handles the exception
- A method that specifies that it can throw the exception; the method must provide a throws clause that lists the exception
All exceptions are checked exceptions, except for those indicated by Error, RuntimeException, and their subclasses.
b. Unchecked exceptions
Unchecked exceptions are exceptional conditions that are internal to the application, and that the application usually cannot anticipate or recover from. These usually indicate programming bugs, such as logic errors or improper use of an API.
Runtime exceptions are indicated by RuntimeException and its subclasses.
c. Errors
Errors are exceptional conditions that are external to the application, and that the application usually cannot anticipate or recover from. For example, OutOfMemoryError occurs when JVM runs out of memory or StackOverflowError occurs when stack overflows.
Errors are represented by Error and its subclasses.

Java finally block is a block that is used to execute important code such as closing connection, stream etc.
Java finally block is always executed whether exception is handled or not.
Java finally block follows try or catch block.

The Java throw keyword is used to explicitly throw an exception.
We can throw either checked or uncheked exception in java by throw keyword. The throw keyword is mainly used to throw custom exception.

Only for the checked exception only , throws can be specified.

throw :
Java throw keyword is used to explicitly throw an exception.
Throw is followed by an instance.
Throw is used within the method.
Checked exception cannot be propagated using throw only.

throws:
Java throws keyword is used to declare an exception.
Throws is followed by class.
Throws is used with the method signature.
Checked exception can be propagated with throws.

final is the keyword and apply restrictions on class, method and variable. Final class can't be inherited, final method can't be overridden and final variable value can't be changed.
finally is a block and is used to place important code, it will be executed whether exception is handled or not.
finalized is a method where in perform clean up processing just before object is garbage collected.

If the superclass method does not declare an exception, subclass overridden method cannot declare the checked exception but can declare unchecked exception.
If the superclass method declares an exception, subclass overridden method can declare same, subclass exception or no exception but cannot declare parent exception.
